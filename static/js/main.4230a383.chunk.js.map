{"version":3,"sources":["api/api.ts","Todolist.tsx","Buttons.tsx","App.tsx","index.tsx"],"names":["URL","getTodos","a","fetch","then","response","json","todosData","usersData","map","todo","userInfo","find","user","userId","id","name","TodoList","todos","className","key","title","completed","Buttons","sortByCompleted","sortByFilter","type","onClick","App","useState","todosList","setTodos","isLoading","setIsLoading","isVisible","setIsVisible","setTimeout","data","finally","filter","sort","b","localeCompare","ReactDOM","render","document","getElementById"],"mappings":"ySAAMA,EAAM,wCAaCC,EAAQ,uCAAG,8BAAAC,EAAA,sEATfC,MAAM,GAAD,OAAIH,EAAJ,UACTI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAQP,cAChBC,EADgB,gBAJfJ,MAAM,GAAD,OAAIH,EAAJ,UACTI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGP,cAEhBE,EAFgB,yBAKfD,EAAUE,KAAI,SAACC,GACpB,IAAMC,EAAWH,EAAUI,MAAK,SAACC,GAAD,OAAgBH,EAAKI,SAAWD,EAAKE,MAErE,OAAO,2BACFL,GADL,IAEEG,KAAMF,EAASK,WAVG,2CAAH,qDCPRC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAAKC,UAAU,mBACZD,EAAMT,KAAI,SAAAC,GAAI,OACb,yBACEU,IAAKV,EAAKK,GACVI,UAAU,QAEV,uBAAGA,UAAU,cACVT,EAAKW,OAER,uBAAGF,UAAU,aAAaT,EAAKG,MAC9BH,EAAKY,UACF,uBAAGH,UAAU,kBAAb,aACA,uBAAGA,UAAU,kBAAb,oBCbDI,EAA2B,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,aAC1D,OACE,yBAAKN,UAAU,WACb,4BACEA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMF,EAAa,UAH9B,gBAOA,4BACEN,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMF,EAAa,WAH9B,iBAOA,4BACEN,UAAU,SACVO,KAAK,SACLC,QAASH,GAHX,uBCyCSI,EA3DH,WAAO,IAAD,EACcC,mBAAiB,IAD/B,mBACTC,EADS,KACEC,EADF,OAEkBF,oBAAkB,GAFpC,mBAETG,EAFS,KAEEC,EAFF,OAGkBJ,oBAAkB,GAHpC,mBAGTK,EAHS,KAGEC,EAHF,KA4BhB,OACE,yBAAKhB,UAAU,aACb,sDACEe,GAEI,4BACER,KAAK,SACLP,UAAU,SACVQ,QA/BM,WAChBM,GAAcD,GACdG,GAAcD,GACdE,YAAW,WACTnC,IACGG,MAAK,SAACiC,GAAD,OAAUN,EAASM,MACxBC,SAAQ,WACPL,GAAa,QAGnB,OAkBQ,cAQLD,EACG,yBAAKb,UAAU,WACde,GAEC,oCACE,kBAAC,EAAD,CACET,aA7BO,SAACc,GACpBR,EAAS,YAAID,GACVU,MAAK,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAEqC,GAAQG,cAAcD,EAAEF,SA4BhCf,gBAzBU,WACtBO,EAAS,YAAID,GACVU,MAAK,SAACtC,EAASuC,GAAV,OAAuBvC,EAAEoB,WAAamB,EAAEnB,iBAyBtC,kBAAC,EAAD,CAAUJ,MAAOY,OCpD/Ba,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.4230a383.chunk.js","sourcesContent":["const URL = 'https://jsonplaceholder.typicode.com/';\n\n\nconst responceTodos = () => {\n  return fetch(`${URL}todos`)\n    .then(response => response.json());\n};\n\nconst responceUsers = () => {\n  return fetch(`${URL}users`)\n    .then(response => response.json());\n};\n\nexport const getTodos = async () => {\n  const todosData = await responceTodos();\n  const usersData = await responceUsers();\n\n\n  return todosData.map((todo: Todo) => {\n    const userInfo = usersData.find((user: User) => todo.userId === user.id);\n\n    return {\n      ...todo,\n      user: userInfo.name,\n    };\n  });\n};\n","import React from 'react';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <div className=\"todos_container\">\n      {todos.map(todo => (\n        <div\n          key={todo.id}\n          className=\"todo\"\n        >\n          <p className=\"todo_title\">\n            {todo.title}\n          </p>\n          <p className=\"todo_user\">{todo.user}</p>\n          {todo.completed\n            ? <p className=\"todo_completed\">completed</p>\n            : <p className=\"todo_inprocess\">in process</p>}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  sortByCompleted: () => void;\n  sortByFilter: (arg0: string) => void;\n};\n\nexport const Buttons: React.FC<Props> = ({ sortByCompleted, sortByFilter }) => {\n  return (\n    <div className=\"buttons\">\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => sortByFilter('user')}\n      >\n        Sort by Name\n      </button>\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => sortByFilter('title')}\n      >\n        Sort by Title\n      </button>\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={sortByCompleted}\n      >\n        Sort by Completed\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getTodos } from './api/api';\nimport { TodoList } from './Todolist';\nimport { Buttons } from './Buttons';\n\nconst App = () => {\n  const [todosList, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const loadTodos = () => {\n    setIsLoading(!isLoading);\n    setIsVisible(!isVisible);\n    setTimeout(() => {\n      getTodos()\n        .then((data) => setTodos(data))\n        .finally(() => {\n          setIsLoading(false);\n        });\n    },\n    1000);\n  };\n\n  const sortByFilter = (filter: string) => {\n    setTodos([...todosList]\n      .sort((a, b) => a[filter].localeCompare(b[filter])));\n  };\n\n  const sortByCompleted = () => {\n    setTodos([...todosList]\n      .sort((a: Todo, b: Todo) => +a.completed - +b.completed));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Dynamic list of TODOs</h1>\n      {!isVisible\n          && (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={loadTodos}\n            >\n              Load Todos\n            </button>\n          )}\n      {isLoading\n        ? <div className=\"loader\" />\n        : (isVisible\n          && (\n            <>\n              <Buttons\n                sortByFilter={sortByFilter}\n                sortByCompleted={sortByCompleted}\n              />\n              <TodoList todos={todosList} />\n            </>\n          )\n        )}\n\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}