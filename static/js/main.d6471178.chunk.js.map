{"version":3,"sources":["api/api.ts","Todolist.tsx","App.tsx","index.tsx"],"names":["URL","getTodos","a","fetch","then","response","json","todosData","usersData","map","todo","userInfo","find","user","userId","id","name","TodoList","todos","className","key","title","completed","App","useState","todosList","setTodos","isLoading","setIsLoading","isVisible","setIsVisible","sortField","setSortField","todosFromServer","sort","b","localeCompare","type","onClick","setTimeout","data","finally","ReactDOM","render","document","getElementById"],"mappings":"8PAAMA,EAAM,wCAaCC,EAAQ,uCAAG,8BAAAC,EAAA,sEATfC,MAAM,GAAD,OAAIH,EAAJ,UACTI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAQP,cAChBC,EADgB,gBAJfJ,MAAM,GAAD,OAAIH,EAAJ,UACTI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGP,cAEhBE,EAFgB,yBAKfD,EAAUE,KAAI,SAACC,GACpB,IAAMC,EAAWH,EAAUI,MAAK,SAACC,GAAD,OAAgBH,EAAKI,SAAWD,EAAKE,MAErE,OAAO,2BACFL,GADL,IAEEG,KAAMF,EAASK,WAVG,2CAAH,qDCPRC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAAKC,UAAU,mBACZD,EAAMT,KAAI,SAAAC,GAAI,OACb,yBACEU,IAAKV,EAAKK,GACVI,UAAU,QAEV,uBAAGA,UAAU,cACVT,EAAKW,OAER,uBAAGF,UAAU,aAAaT,EAAKG,MAC9BH,EAAKY,UACF,uBAAGH,UAAU,kBAAb,aACA,uBAAGA,UAAU,kBAAb,oBCsECI,EArFH,WAAO,IAAD,EACcC,mBAAiB,IAD/B,mBACTC,EADS,KACEC,EADF,OAEkBF,oBAAkB,GAFpC,mBAETG,EAFS,KAEEC,EAFF,OAGkBJ,oBAAkB,GAHpC,mBAGTK,EAHS,KAGEC,EAHF,OAIkBN,mBAAiB,IAJnC,mBAITO,EAJS,KAIEC,EAJF,KAmBhB,OAAQD,GACN,IAAK,YACH9B,IACGG,MAAK,SAAC6B,GAAD,OAAqBP,EAASO,EACjCC,MAAK,SAAChC,EAASiC,GAAV,OAAuBjC,EAAEoB,WAAaa,EAAEb,iBAClD,MACF,IAAK,OACL,IAAK,QACHrB,IACGG,MAAK,SAAA6B,GAAe,OAAIP,EAASO,EAC/BC,MAAK,SAAChC,EAASiC,GAAV,OAAsBjC,EAAE6B,GAAWK,cAAcD,EAAEJ,WAMjE,OACE,yBAAKZ,UAAU,aACb,sDACEU,GAEI,4BACEQ,KAAK,SACLlB,UAAU,SACVmB,QArCM,WAChBV,GAAcD,GACdG,GAAcD,GACdU,YAAW,WACTtC,IACGG,MAAK,SAACoC,GAAD,OAAUd,EAASc,MACxBC,SAAQ,WACPb,GAAa,QAGnB,OAwBQ,cAQLD,EACG,yBAAKR,UAAU,WACdU,GAEC,oCACE,yBAAKV,UAAU,WACb,4BACEA,UAAU,SACVkB,KAAK,SACLC,QAAS,kBAAMN,EAAa,UAH9B,gBAOA,4BACEb,UAAU,SACVkB,KAAK,SACLC,QAAS,kBAAMN,EAAa,WAH9B,iBAOA,4BACEb,UAAU,SACVkB,KAAK,SACLC,QAAS,kBAAMN,EAAa,eAH9B,sBAQF,kBAAC,EAAD,CAAUd,MAAOO,OC7E/BiB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d6471178.chunk.js","sourcesContent":["const URL = 'https://jsonplaceholder.typicode.com/';\n\n\nconst responceTodos = () => {\n  return fetch(`${URL}todos`)\n    .then(response => response.json());\n};\n\nconst responceUsers = () => {\n  return fetch(`${URL}users`)\n    .then(response => response.json());\n};\n\nexport const getTodos = async () => {\n  const todosData = await responceTodos();\n  const usersData = await responceUsers();\n\n\n  return todosData.map((todo: Todo) => {\n    const userInfo = usersData.find((user: User) => todo.userId === user.id);\n\n    return {\n      ...todo,\n      user: userInfo.name,\n    };\n  });\n};\n","import React from 'react';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <div className=\"todos_container\">\n      {todos.map(todo => (\n        <div\n          key={todo.id}\n          className=\"todo\"\n        >\n          <p className=\"todo_title\">\n            {todo.title}\n          </p>\n          <p className=\"todo_user\">{todo.user}</p>\n          {todo.completed\n            ? <p className=\"todo_completed\">completed</p>\n            : <p className=\"todo_inprocess\">in process</p>}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getTodos } from './api/api';\nimport { TodoList } from './Todolist';\n\nconst App = () => {\n  const [todosList, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [sortField, setSortField] = useState<string>('');\n\n  const loadTodos = () => {\n    setIsLoading(!isLoading);\n    setIsVisible(!isVisible);\n    setTimeout(() => {\n      getTodos()\n        .then((data) => setTodos(data))\n        .finally(() => {\n          setIsLoading(false);\n        });\n    },\n    1000);\n  };\n\n  switch (sortField) {\n    case 'completed':\n      getTodos()\n        .then((todosFromServer) => setTodos(todosFromServer\n          .sort((a: Todo, b: Todo) => +a.completed - +b.completed)));\n      break;\n    case 'user':\n    case 'title':\n      getTodos()\n        .then(todosFromServer => setTodos(todosFromServer\n          .sort((a: Todo, b: Todo) => a[sortField].localeCompare(b[sortField]))));\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Dynamic list of TODOs</h1>\n      {!isVisible\n          && (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={loadTodos}\n            >\n              Load Todos\n            </button>\n          )}\n      {isLoading\n        ? <div className=\"loader\" />\n        : (isVisible\n          && (\n            <>\n              <div className=\"buttons\">\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSortField('user')}\n                >\n                  Sort by Name\n                </button>\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSortField('title')}\n                >\n                  Sort by Title\n                </button>\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSortField('completed')}\n                >\n                  Sort by Completed\n                </button>\n              </div>\n              <TodoList todos={todosList} />\n            </>\n          )\n        )}\n\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}